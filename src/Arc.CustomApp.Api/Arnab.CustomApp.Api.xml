<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Arc.CustomApp.Api</name>
    </assembly>
    <members>
        <member name="M:Arc.CustomApp.Api.Endpoints.GetStudentByIdEndpoint.MapGetStudentByIdEndpoint(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)">
            <summary>Maps the "get-student-by-id" endpoint to retrieve student data.</summary>
            <param name="builder">The endpoint builder to configure the endpoint.</param>
        </member>
        <member name="M:Arc.CustomApp.Api.Endpoints.GetStudentsEndpoint.MapGetStudentEndpoint(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)">
            <summary>Maps the "get-students" endpoint to retrieve students data.</summary>
            <param name="builder">The endpoint builder to configure the endpoint.</param>
        </member>
        <member name="T:Arc.CustomApp.Api.Middlewares.GlobalExceptionHandler">
            <summary>If there are any unhandled exceptions in the API endpoints,
            then it handles those exceptions.</summary>
            <param name="logger">The logger to log the exception details.</param>
        </member>
        <member name="M:Arc.CustomApp.Api.Middlewares.GlobalExceptionHandler.#ctor(Microsoft.Extensions.Logging.ILogger{Arc.CustomApp.Api.Middlewares.GlobalExceptionHandler})">
            <summary>If there are any unhandled exceptions in the API endpoints,
            then it handles those exceptions.</summary>
            <param name="logger">The logger to log the exception details.</param>
        </member>
        <member name="M:Arc.CustomApp.Api.Middlewares.GlobalExceptionHandler.TryHandleAsync(Microsoft.AspNetCore.Http.HttpContext,System.Exception,System.Threading.CancellationToken)">
            <summary>It handles the global exceptions.</summary>
            <param name="httpContext">The http context.</param>
            <param name="exception">The exception to handle.</param>
            <param name="cancellationToken">A token that can be used to cancel the 
            operation before completion.</param>
            <returns>True if the exception can be handled otherwise false.</returns>
        </member>
    </members>
</doc>
